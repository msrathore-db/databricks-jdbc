name: Integration Tests Workflow - Main Branch

on:
  push:
    branches: [main]

jobs:
  build-and-test:
    name: Build and Run Integration Tests
    runs-on:
      group: databricks-protected-runner-group
      labels: linux-ubuntu-latest
    environment: azure-prod
    strategy:
      matrix:
        include:
          - test-command: mvn -B compile test -Dtest=*IntegrationTests
            token-secret: DATABRICKS_TOKEN
            fake-service-type: 'SQL_EXEC'
          - test-command: mvn -B compile test -Dtest=*IntegrationTests,!M2MPrivateKeyCredentialsIntegrationTests,!SqlExecApiHybridResultsIntegrationTests,!DBFSVolumeIntegrationTests,!M2MAuthIntegrationTests,!UCVolumeIntegrationTests
            token-secret: THRIFT_DATABRICKS_TOKEN
            fake-service-type: 'THRIFT_SERVER'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'adopt'
      - uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Create .pem file from secret
        run: |
          echo "${{ secrets.DATABRICKS_M2M_PEM }}" > /tmp/jdbc-testing-enc.pem
          chmod 600 /tmp/jdbc-testing-enc.pem
      - name: Debug Environment Variables
        run: |
          echo "DATABRICKS_BENCHFOOD_TOKEN is set: ${{ secrets.DATABRICKS_BENCHFOOD_TOKEN != '' }}"
          echo "DATABRICKS_BENCHFOOD_HTTP_PATH is set: ${{ secrets.DATABRICKS_BENCHFOOD_HTTP_PATH != '' }}"
          echo "DATABRICKS_BENCHFOOD_HOST is set: ${{ secrets.DATABRICKS_BENCHFOOD_HOST != '' }}"
      - name: Run Integration Tests
        run: ${{ matrix.test-command }}
        env:
          DATABRICKS_TOKEN: ${{ secrets[matrix.token-secret] }}
          DATABRICKS_USER: ${{ secrets.DATABRICKS_USER }}
          DATABRICKS_DOGFOOD_HTTP_PATH: ${{ secrets.DATABRICKS_DOGFOOD_HTTP_PATH }}
          FAKE_SERVICE_TYPE: ${{ matrix.fake-service-type }}
          DATABRICKS_JDBC_M2M_CLIENT_ID: ${{ secrets.DATABRICKS_JDBC_M2M_CLIENT_ID }}
          DATABRICKS_JDBC_M2M_CLIENT_SECRET: ${{ secrets.DATABRICKS_JDBC_M2M_CLIENT_SECRET }}
          DATABRICKS_JDBC_M2M_HOST: ${{ secrets.DATABRICKS_JDBC_M2M_HOST }}
          DATABRICKS_JDBC_M2M_HTTP_PATH: ${{ secrets.DATABRICKS_JDBC_M2M_HTTP_PATH }}
          DATABRICKS_JDBC_M2M_PRIVATE_KEY_CLIENT_ID: ${{ secrets.DATABRICKS_JDBC_M2M_PRIVATE_KEY_CLIENT_ID }}
          DATABRICKS_JDBC_M2M_PRIVATE_KEY_TOKEN_ENDPOINT: ${{ secrets.DATABRICKS_JDBC_M2M_PRIVATE_KEY_TOKEN_ENDPOINT }}
          DATABRICKS_JDBC_M2M_PRIVATE_KEY_AUTH_KID: ${{ secrets.DATABRICKS_JDBC_M2M_PRIVATE_KEY_AUTH_KID }}
          DATABRICKS_JDBC_M2M_PRIVATE_KEY_JWT_KEY_PASSPHRASE: ${{ secrets.DATABRICKS_JDBC_M2M_PRIVATE_KEY_JWT_KEY_PASSPHRASE }}
          DATABRICKS_JDBC_M2M_PRIVATE_KEY_CREDENTIALS_HTTP_PATH: ${{ secrets.DATABRICKS_JDBC_M2M_PRIVATE_KEY_CREDENTIALS_HTTP_PATH }}
          DATABRICKS_JDBC_M2M_PRIVATE_KEY_CREDENTIALS_HOST: ${{ secrets.DATABRICKS_JDBC_M2M_PRIVATE_KEY_CREDENTIALS_HOST }}
          DATABRICKS_BENCHFOOD_TOKEN: ${{ secrets.DATABRICKS_BENCHFOOD_TOKEN }}
          DATABRICKS_BENCHFOOD_HTTP_PATH: ${{ secrets.DATABRICKS_BENCHFOOD_HTTP_PATH }}
          DATABRICKS_BENCHFOOD_HOST: ${{ secrets.DATABRICKS_BENCHFOOD_HOST }}